<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="http://jameslieu.co.uk/feed.xml" rel="self" type="application/atom+xml" /><link href="http://jameslieu.co.uk/" rel="alternate" type="text/html" /><updated>2021-12-06T20:44:36+00:00</updated><id>http://jameslieu.co.uk/feed.xml</id><title type="html">James Lieu</title><subtitle>Software Developer</subtitle><author><name>James Lieu</name></author><entry><title type="html">Sorting Visualiser</title><link href="http://jameslieu.co.uk/sorting-visualiser/" rel="alternate" type="text/html" title="Sorting Visualiser" /><published>2021-12-04T00:00:00+00:00</published><updated>2021-12-04T00:00:00+00:00</updated><id>http://jameslieu.co.uk/sorting-visualiser</id><content type="html" xml:base="http://jameslieu.co.uk/sorting-visualiser/">&lt;p&gt;&lt;img src=&quot;/assets/media/quicksort.gif&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A project I‚Äôve always wanted to create is a visualisation of sorting algorithms ever since I saw it elsewhere on the internet.&lt;/p&gt;

&lt;p&gt;With the release of .NET 6, I wanted to see how far the Blazor web framework has come along. And so I used this as an opportunity to create this sorting visualiser using the Blazor framework.&lt;/p&gt;

&lt;p&gt;This project not only allows me to learn the basics of Blazor but also explore the various known/popular sorting algorithms.&lt;/p&gt;

&lt;p&gt;Here is the &lt;a href=&quot;https://github.com/jameslieu/SortingVisualiser&quot;&gt;link to the project on Github&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;

&lt;p&gt;Visual Studio makes it easy to create a base Blazor Web Assembly project with some example pages. I started with this and then created my own page.&lt;/p&gt;

&lt;p&gt;The first thing I did was write an array generator. This will generate a random array of integers on page load, I‚Äôve also added a button which triggers this function on click, so the user can generate a new one as they please.&lt;/p&gt;

&lt;p&gt;On the template, I iterated over the array and created a div element with a width of 5px, its height is mapped to the array elements which then gives us a visualisation of the unsorted array.&lt;/p&gt;

&lt;p&gt;I then created a function which handled the sorting. Prior to doing this, I had created a class library of the sorting algorithm (I started with quick sort), this was so I could explore and study it (with unit tests) before applying it to this application.&lt;/p&gt;

&lt;h2 id=&quot;challenges&quot;&gt;Challenges&lt;/h2&gt;

&lt;p&gt;The main challenge was animating the swap. The step needed was to have the array re-render as soon as we swapped the elements. Thankfully Blazor already had a built-in function &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;StateHasChanged()&lt;/code&gt; which enabled me to manually trigger a re-render as soon as we swap the elements when sorting.&lt;/p&gt;

&lt;p&gt;In terms of visualising the animation, some basic CSS was needed to change the colour each time a swap was taking place. I used 2 pointers (3 for quicksort to visualise the pivot) to track the indices of the array and passed that into a function which was responsible for changing the background colour of the elements. And so each time a re-render was triggered, the background colour of each element was changed accordingly.&lt;/p&gt;

&lt;p&gt;I also needed to add a delay/sleep onto the function otherwise the function will run too quickly and we wouldn‚Äôt be able see the animation. Adding a delay of 20ms was good enough.&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;For everyday use, I‚Äôve always used the built-in sort functions from the programming language I‚Äôm using. But doesn‚Äôt mean there isn‚Äôt value in learning different ways to write an algorithm. It‚Äôs interesting to see the various solutions, and it is helps to have visualisation of the problem/solution.&lt;/p&gt;

&lt;p&gt;There is room for improvement, I could refactor the visualiser to be a single component to be reused instead of duplicating it for each sorting algorithm.&lt;/p&gt;

&lt;p&gt;In any case, I‚Äôm glad I wrote this project, it was quite simple in the end but its good to have spent some time creating it. I‚Äôm pleased with the outcome.&lt;/p&gt;

&lt;p&gt;There are many other sorting visualisers on the internet which have additional features such as adjusting speed, array size and even sound effects. I don‚Äôt think I‚Äôd put in the time to do it as the main feature of seeing the elements swap and watching the bars sort in real time is enough for me.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/bubblesort.gif&quot; /&gt;
&lt;em&gt;Bubble sort&lt;/em&gt;&lt;/p&gt;</content><author><name>James Lieu</name></author><category term="Programming" /><summary type="html">I created a simple sorting visualiser using Blazor Web Assembly</summary></entry><entry><title type="html">Find Out If You Enjoy Programming</title><link href="http://jameslieu.co.uk/find-out-if-you-enjoy-programming/" rel="alternate" type="text/html" title="Find Out If You Enjoy Programming" /><published>2021-04-19T00:00:00+01:00</published><updated>2021-04-19T00:00:00+01:00</updated><id>http://jameslieu.co.uk/find-out-if-you-enjoy-programming</id><content type="html" xml:base="http://jameslieu.co.uk/find-out-if-you-enjoy-programming/">&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/RN8ZXxq2awQ&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;In many ways, the point of programming is to use a computer to solve problems. Pretty much every code a developer writes involves problem solving in one form or another, do they need to automate a process? Fetch data from somewhere? to store data into a database? How would they achieve this?&lt;/p&gt;

&lt;p&gt;All of these involve solving a problem, and it is this problem solving process which appears to make programming enjoyable for developers.&lt;/p&gt;

&lt;p&gt;With this in mind, what would be the fastest way for someone who has no programming experience to find out whether they would enjoy it or not?&lt;/p&gt;

&lt;h2 id=&quot;why-do-devlopers-enjoy-it&quot;&gt;Why Do Devlopers Enjoy It?&lt;/h2&gt;

&lt;p&gt;I‚Äôve Googled ‚Äúwhy do developers love coding‚Äù. And you can see developers respond with answers such as:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Puzzles and Problem solving&lt;/li&gt;
  &lt;li&gt;Creating something amazing from scratch&lt;/li&gt;
  &lt;li&gt;The sheer joy of making things, Programming is fundamentally about creating solutions to problems.&lt;/li&gt;
  &lt;li&gt;Converting ideas / imaginations into reality&lt;/li&gt;
  &lt;li&gt;The pleasure of making things that are useful to other people&lt;/li&gt;
  &lt;li&gt;Programming improves our problem solving skills.&lt;/li&gt;
  &lt;li&gt;Liking coding because they like puzzles and makes their lives easier&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These are some of the answers I‚Äôve seen and agree with personally. Things like&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Having a strong sense of purpose or accomplishments&lt;/li&gt;
  &lt;li&gt;The satisfaction of finding solutions to problems&lt;/li&gt;
  &lt;li&gt;The constant learning and the option of learning different languages, frameworks or technologies&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Altogether, these reasons to me can be boiled down to two primary reasons why programming is enjoyable.&lt;/p&gt;

&lt;h3 id=&quot;learning-and-problem-solving&quot;&gt;Learning And Problem Solving&lt;/h3&gt;

&lt;p&gt;So in my opinion, the fastest way to first find out whether somebody will enjoy this is to choose a beginner friendly programming problem or exercise to solve, and needs to have utilize a number of features of programming combined to solve it.&lt;/p&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;Ideally they would be following this exercise on their computer, the point is for them to actually follow and do the exercise to determine whether they‚Äôll enjoy programming or not.&lt;/p&gt;

&lt;p&gt;So if I were somebody who was unsure about whether I‚Äôll be interested in this, I would want the least barrier to entry. So here are some prerequisites I think will help with that.&lt;/p&gt;

&lt;h3 id=&quot;no-installation-required&quot;&gt;No installation required&lt;/h3&gt;
&lt;p&gt;There should be no downloading or installing programming languages to your computer&lt;/p&gt;

&lt;h3 id=&quot;no-programming-knowledge-required&quot;&gt;No programming knowledge required&lt;/h3&gt;

&lt;p&gt;They also wouldn‚Äôt need any experience with programming yet as I‚Äôll run through the very basics and exactly what they would need to know in order to complete the short exercise.&lt;/p&gt;

&lt;p&gt;And so to meet this requirement, the programming language I have chosen for this exercise is &lt;strong&gt;JavaScript&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The main reason is that it‚Äôs a good beginner friendly language, and because most web browsers support it, you wouldn‚Äôt need to download anything in order to get started.&lt;/p&gt;

&lt;p&gt;Ok so I‚Äôll begin by going though, specifically the javascript basics needed to solve the exercise.&lt;/p&gt;

&lt;h2 id=&quot;the-basics&quot;&gt;The Basics&lt;/h2&gt;

&lt;h3 id=&quot;strings&quot;&gt;Strings&lt;/h3&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Strings are created with ' or &quot;.&lt;/span&gt;
&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;abc&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Hello, world&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;01/01/2001&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In computer programming, a string is a data type, and is basically a sequence of characters. They are created with a single quote or double quote. And in layman‚Äôs terms, you can use them to construct words or other sequences of characters.&lt;/p&gt;

&lt;h3 id=&quot;integers&quot;&gt;Integers&lt;/h3&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// integers are whole numbers&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Some basic arithmetic works as you'd expect.&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// = 2&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// = 7&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// = 20&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;35&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// = 7&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Integers are whole numbers. And basic arithmetic works as you‚Äôd expect.&lt;/p&gt;

&lt;h3 id=&quot;variables&quot;&gt;Variables&lt;/h3&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;teamName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‚Äò&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Foobar&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;‚Äô&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numberOfCars&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gameName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‚Äò&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tic&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tac&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;toe&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;‚Äô&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fullName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‚Äò&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;John&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Doe&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;‚Äô&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Computer programs use variables to store information. Any data type can be stored in a variable for example, a person‚Äôs name, their age, date of birth.&lt;/p&gt;

&lt;p&gt;You can assign a variable using either the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;var&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;let&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;const&lt;/code&gt; keyword.&lt;/p&gt;

&lt;p&gt;It is preferred to use either the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;const&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;let&lt;/code&gt; keyword. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Const&lt;/code&gt; for when you don‚Äôt need to reassign this variable, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;let&lt;/code&gt; for when you do.&lt;/p&gt;

&lt;p&gt;Avoid using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;var&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;boolean&quot;&gt;Boolean&lt;/h3&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isActive&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isDisabled&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In computer science, Boolean is a data type that has one of two possible values (usually denoted true and false)&lt;/p&gt;

&lt;h3 id=&quot;comparison-operators&quot;&gt;Comparison Operators&lt;/h3&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Equality is ===&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// = true&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// = false&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Inequality is !==&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// = false&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// = true&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// More comparisons&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// = true&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// = false&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// = true&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// = true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;These are used in logical statements to determine equality, inequality or difference between values. When using comparison operators, it‚Äôs ‚Äúreturn type‚Äù is a boolean.&lt;/p&gt;

&lt;p&gt;For example, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1 == 1&lt;/code&gt; is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;true&lt;/code&gt;,  and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2 == 1&lt;/code&gt; is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;false&lt;/code&gt;
To compare whether something is NOT equal to something, use the exclamation mark followed by the equals character.&lt;/p&gt;

&lt;p&gt;And other comparison operators are  less than, more than, less than or equal to OR more than or equal to.&lt;/p&gt;

&lt;h3 id=&quot;concatenation&quot;&gt;Concatenation&lt;/h3&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Strings are concatenated with +&lt;/span&gt;
&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Hello &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;world!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// = &quot;Hello world!&quot;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// ... which works with more than just strings&lt;/span&gt;
&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;1, 2, &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// = &quot;1, 2, 3&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Strings and or numbers can be concatenated by using the plus operator. Think of it as combining two values together&lt;/p&gt;

&lt;h3 id=&quot;conditional-statements&quot;&gt;Conditional Statements&lt;/h3&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// evaluated if count is 3&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// evaluated if count is 4&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// evaluated if it's not either 3 or 4&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;conditional statements, or if / else statements are used to perform actions based on certain conditions.&lt;/p&gt;

&lt;p&gt;To use these statements, use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;if&lt;/code&gt; keyword followed by your condition in parenthesis which needs to be a boolean value,&lt;/p&gt;

&lt;p&gt;In this example, if the count equals 3 then the block directly underneath will be evaluated, else if count is equal to 4 then the block underneath that will be executed, and if neither of those are true then the following else statement will be executed.&lt;/p&gt;

&lt;p&gt;You can also use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;if&lt;/code&gt; statement without any preceding &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;else&lt;/code&gt; statements, if the condition isn‚Äôt met, then the logic within its block will not be executed.&lt;/p&gt;

&lt;h3 id=&quot;loops&quot;&gt;Loops&lt;/h3&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// will run 5 times&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// An infinite loop!&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So loops are used to execute a block of statement, a specified number of times, OR till a specified condition is true.&lt;/p&gt;

&lt;p&gt;The one we‚Äôre using for this exercise is &lt;strong&gt;the while loop&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So, the While Loop is used to, execute a block of statements, till a specified condition is true, if the condition becomes false the While Loop terminates.&lt;/p&gt;

&lt;p&gt;We do need make sure we have a way to break out of the loop, otherwise we could end up with an infinite loop and crash the program.&lt;/p&gt;

&lt;h3 id=&quot;consolelog&quot;&gt;console.log&lt;/h3&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gameName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‚Äò&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tic&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tac&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;toe&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;‚Äô&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gameName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// tic tac toe&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;the-exercise&quot;&gt;The Exercise&lt;/h2&gt;

&lt;p&gt;Print the lyrics for the &lt;a href=&quot;http://99-bottles-of-beer.net/lyrics.html&quot;&gt;99 bottles of beer&lt;/a&gt; song into the console.&lt;/p&gt;

&lt;p&gt;The lyrics are very repetitive, where it counts from 99 bottles of beer down to 0 bottles of beer. As shown in the javascript basics, you might already be able to picture how you would solve this.&lt;/p&gt;

&lt;p&gt;I‚Äôve created a video which goes through the exercise.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/RN8ZXxq2awQ&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;In my tutorial, although there were a few steps to achieve the outcome, ultimately there were two actions in play.&lt;/p&gt;

&lt;p&gt;The first was learning something new, programming basics such as strings, integers, conditional operators and loops.&lt;/p&gt;

&lt;p&gt;The second was to use those programming tools in order to solve a problem, in our case it was to first print a countdown of the number of bottles on the wall in the console&lt;/p&gt;

&lt;p&gt;A Beginner level challenge, but the process of discovering and solving those problems is what we should pay attention to. If you were bored of breaking down the problem into steps and eventually solving it then programming is probably not for you.&lt;/p&gt;

&lt;p&gt;Try other programming challenges or refining this existing one, try different loops such as the ‚Äúwhile‚Äù or ‚Äúdo while‚Äù loop and see if you can achieve the same result.&lt;/p&gt;

&lt;p&gt;However, if you did enjoy completing the task and seeing your results onto the console, then perhaps programming could be enjoyable and may be something you should consider learning and even pursue a career in.&lt;/p&gt;

&lt;p&gt;Here is the solution to the problem&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;bottles&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;bottle&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; bottles of beer on the wall, &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; bottles of beer, Take one down, pass it around, &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; of beer on the wall.&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;1 bottle of beer on the wall, 1 bottle of beer. Take one down and pass it around, no more bottles of beer on the wall.&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;No more bottles of beer on the wall, no more bottles of beer. Go to the store and buy some more, 99 bottles of beer on the wall.&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;Often I see people ask about whether they should become software developers or make the leap and switch careers and pursue one in programming. In this career and like many others, it really helps if you enjoy it.&lt;/p&gt;

&lt;p&gt;And when curious or interested about a new topic or leisure, you can only really find out if it‚Äôs something you‚Äôd enjoy by getting ‚Äúhands-on‚Äù and trying it out.&lt;/p&gt;

&lt;p&gt;It can be daunting to see the many different ways of learning or getting started, but in my experience, just learning the basics on it‚Äôs own isn‚Äôt as interesting or enjoyable. It‚Äôs only when you apply those basics and fundamentals to something do you really start to discover whether it‚Äôs something you can enjoy or not.&lt;/p&gt;</content><author><name>James Lieu</name></author><category term="Programming" /><summary type="html">What would be the fastest way for someone who has no programming experience to find out whether they would enjoy it or not?</summary></entry><entry><title type="html">What are CRC Cards?</title><link href="http://jameslieu.co.uk/crc-cards/" rel="alternate" type="text/html" title="What are CRC Cards?" /><published>2021-04-13T00:00:00+01:00</published><updated>2021-04-13T00:00:00+01:00</updated><id>http://jameslieu.co.uk/crc-cards</id><content type="html" xml:base="http://jameslieu.co.uk/crc-cards/">&lt;p&gt;They are commonly used for brainstorming to help design object-oriented software.&lt;/p&gt;

&lt;p&gt;CRC cards are used after ‚Äúuse-case‚Äù descriptions before class diagrams within software development.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/crc-cards-1.jpg&quot; style=&quot;height:400px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;They are usually created from index cards. The card is partitioned into three areas&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;On the top: the class name&lt;/li&gt;
  &lt;li&gt;On the left: the responsibilities of the class&lt;/li&gt;
  &lt;li&gt;On the right: collaborators (other classes) with which this class interacts to fulfill its responsibilities.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Using a small card minimises the complexity of the design. And focuses on the essentials of the class and prevents designers from getting into the small details and implementation at a time when details like those are probably counter-productive.&lt;/p&gt;

&lt;p&gt;One benefit is that it discourages giving the class too many responsibilities.&lt;/p&gt;

&lt;p&gt;If they‚Äôre are written on physical cards, they can easily be laid out on a table and re-arranged when discussing design.&lt;/p&gt;

&lt;h2 id=&quot;how-to-create&quot;&gt;How to create&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Begin by writing out a scenario which identifies the major actors and actions which are performed by the actors.&lt;/li&gt;
  &lt;li&gt;Only write actors and actions specific to the scenario.&lt;/li&gt;
  &lt;li&gt;Nouns should turn into the classes of the card&lt;/li&gt;
  &lt;li&gt;Verbs typically turn into the responsibility of the card&lt;/li&gt;
  &lt;li&gt;Collaborators are the other cards that the card will be interacting.&lt;/li&gt;
  &lt;li&gt;Use in small groups / for small projects&lt;/li&gt;
  &lt;li&gt;Keep it informal&lt;/li&gt;
  &lt;li&gt;Use to brainstorm many different logical paths.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/crc-cards-2.jpg&quot; style=&quot;height:400px;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;pros-vs-cons&quot;&gt;Pros vs Cons&lt;/h2&gt;

&lt;h3 id=&quot;advantages&quot;&gt;Advantages&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Very cooperative and very collaborative technique&lt;/li&gt;
  &lt;li&gt;Helps determine what classes are needed&lt;/li&gt;
  &lt;li&gt;Ongoing process&lt;/li&gt;
  &lt;li&gt;User inpur is very useful&lt;/li&gt;
  &lt;li&gt;Allows for learning from others&lt;/li&gt;
  &lt;li&gt;Allows to compare ideas&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;disadvantages&quot;&gt;Disadvantages&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Not great if you need a lot of detail&lt;/li&gt;
  &lt;li&gt;Cooperation of users required&lt;/li&gt;
  &lt;li&gt;No timeline throughout the cards&lt;/li&gt;
  &lt;li&gt;Hard with large projects.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;Sometimes when planning work before coding, its good to think about where code belongs or what responsibilities a class should have because it will help with the organisation as well as making things easier for developers.&lt;/p&gt;

&lt;p&gt;It can be difficult to sum up all the pieces of code, functions or classes needed to build a feature and methods like this can help make the overall design be more thoughtout and less prone to brittleness in the future&lt;/p&gt;

&lt;p&gt;I personally haven‚Äôt seen or experienced a CRC-card session, but if I were to apply the thought process behind the concept and apply it to my own workflow, I‚Äôd bet that the quality of the work I create would improve.&lt;/p&gt;</content><author><name>James Lieu</name></author><category term="Programming" /><summary type="html">Class-Responsibility-Collaboration cards</summary></entry><entry><title type="html">Testing with Visual Studio and .NET 5 (2021)</title><link href="http://jameslieu.co.uk/testing-with-visual-studio/" rel="alternate" type="text/html" title="Testing with Visual Studio and .NET 5 (2021)" /><published>2021-04-07T00:00:00+01:00</published><updated>2021-04-07T00:00:00+01:00</updated><id>http://jameslieu.co.uk/testing-with-visual-studio</id><content type="html" xml:base="http://jameslieu.co.uk/testing-with-visual-studio/">&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/BBz8DP10kIA&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Automated tests are one of the most effective ways to be confident that, when developing software, your code actually works as expected.&lt;/p&gt;

&lt;p&gt;Testing your code is instrumental to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Improve code quality&lt;/li&gt;
  &lt;li&gt;Reduce bugs&lt;/li&gt;
  &lt;li&gt;Increased confidence in your code&lt;/li&gt;
  &lt;li&gt;Automate regression testing&lt;/li&gt;
  &lt;li&gt;Refactoring your code.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;why-should-we-test&quot;&gt;Why Should We Test?&lt;/h2&gt;

&lt;p&gt;The reason why we would want to test our code is to ensure that our code works, under varying circumstances, with different inputs. Depending on the program you write, your user may not enter inputs that you would normally expect, and so knowing how your code will behave when this happens, is good to know and whether that behaviour is expected or even acceptable.&lt;/p&gt;

&lt;p&gt;Testing also improves the quality of your code, you‚Äôll find that when you have tests in place, the quality of your code will improve, this could be due to being certain, that the behaviour of your code is working correctly therefore giving you confidence to alter and improve it without breaking the underlying logic or functionality.&lt;/p&gt;

&lt;p&gt;It also helps you focus on quality because you‚Äôre having to think about all of the scenarios you need to test, it may even highlight that there are areas in your implementation which need to be addressed such as error handling or failing gracefully in order to keep the user experience of your application smooth.&lt;/p&gt;

&lt;p&gt;An advantage of testing is that once the tests are written and passing, they are very repeatable. Meaning you can run them as frequently as you want and they should succeed every time, and if at any point during the development cycle some tests are failing, it‚Äôs likely due to any updates or edits made to the codebase since.&lt;/p&gt;

&lt;h2 id=&quot;how-to-test&quot;&gt;How to Test?&lt;/h2&gt;

&lt;p&gt;Basically it is you writing methods to test other methods in your code base. These are often written in a test project or within its own directory&lt;/p&gt;

&lt;p&gt;You arrange the environment or scenario which will include preparing your code to be invoked by the test method and then asserting what outcome you are expecting&lt;/p&gt;

&lt;p&gt;Each test ideally will cover a scenario within your code, this includes if/else statements, cases, loops.&lt;/p&gt;

&lt;p&gt;Anywhere there‚Äôs logic and has some functionality should have tests to cover those lines of code to minimize or remove any unexpected behaviour your code may encounter.&lt;/p&gt;

&lt;h2 id=&quot;advantages&quot;&gt;Advantages&lt;/h2&gt;

&lt;p&gt;The benefits of doing all of this is that you can perform what‚Äôs called a regression test. Meaning if you make updates to your code, running your tests again will inform you whether the functionality is still intact, despite any updates you‚Äôve just made.&lt;/p&gt;

&lt;p&gt;Bear in mind, that regression testing is not exclusive to automated tests, some companies have QA departments to do manual regression testing for their products, but understandably, automated tests ran by the codebase will not only be faster, but is repeatable, consistent and less prone to human error or oversight.&lt;/p&gt;

&lt;p&gt;You can also automate the setup and tear down of each test to make sure the scenario and environment is the same every time.&lt;/p&gt;

&lt;p&gt;Tests can also be treated as documentation for any developer who maintains the source code, some projects are large and it is unlikely that any one developer will remember every piece of logic that is written, so well written tests with good titles can be used to document business logic and other functionality.&lt;/p&gt;

&lt;h2 id=&quot;disadvantages&quot;&gt;Disadvantages&lt;/h2&gt;

&lt;p&gt;It requires more time up-front. Not only does the developer have to write the functionality but the tests as well. Tests need to be  thorough and covering all the edge cases will take time.&lt;/p&gt;

&lt;p&gt;The second disadvantage is that the tests are only as good as the developer who writes the tests, if the tests are poorly written or not thorough, then relying on those without any other regression test increases risk. If your tests are brittle, then they can also require time to ‚Äúfix‚Äù those tests whenever you add logic even though the actual functionality hasn‚Äôt actually been altered.&lt;/p&gt;

&lt;p&gt;It‚Äôs harder to test UI with these tests so having a QA team or the developer, manually check the UI is still required.&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;Testing is a common requirement for most job roles, being able to test your code well is a must-have skill for any junior developer wanting to get into the industry. It is often overlooked when learning, but spending some time to understand the concepts and getting good at testing is a worthwhile use of time.&lt;/p&gt;</content><author><name>James Lieu</name></author><category term="Programming" /><summary type="html">Automated tests is one of the most effective ways to be confident that your code actually works.</summary></entry><entry><title type="html">Why Some People Fail to Learn Programming</title><link href="http://jameslieu.co.uk/why-some-people-fail-to-learn-programming/" rel="alternate" type="text/html" title="Why Some People Fail to Learn Programming" /><published>2021-04-03T00:00:00+01:00</published><updated>2021-04-03T00:00:00+01:00</updated><id>http://jameslieu.co.uk/why-some-people-fail-to-learn-programming</id><content type="html" xml:base="http://jameslieu.co.uk/why-some-people-fail-to-learn-programming/">&lt;h3 id=&quot;short-answer-those-people-failed-to-learn-programming-because-they-chose-to-fail&quot;&gt;Short answer: Those people failed to learn programming because they chose to fail.&lt;/h3&gt;

&lt;h2 id=&quot;why-did-they-fail&quot;&gt;Why Did They Fail?&lt;/h2&gt;

&lt;p&gt;Maybe they chose the wrong courses, or the wrong programming language, or they chose to watch Netflix instead of sitting at their desk to study. The point is everything you do in your life is your choice.&lt;/p&gt;

&lt;p&gt;I don‚Äôt want to sound too harsh, but with all things in life, holding ourselves accountable is the best way to grow and move forward, blaming others or things outside of your control is neither productive nor necessarily the reality of what happened.&lt;/p&gt;

&lt;p&gt;So if you failed to learn programming or pursue a programming career, that is a choice you chose to make.&lt;/p&gt;

&lt;p&gt;Don‚Äôt blame it on anything, don‚Äôt blame it on anyone or past mistakes, those are current things you‚Äôre choosing to do. Also bear in mind, that is not necessarily a bad thing either.&lt;/p&gt;

&lt;p&gt;So if you wanted to learn programming, you would‚Äôve learned programming, you would‚Äôve put in the hours, did the research, find the relevant courses or even paid money to learn to code.&lt;/p&gt;

&lt;p&gt;We all lose interest in things, such as studying programming concepts or building that personal project or portfolio. If you want results, you just have to work whether you feel like it or not, you can‚Äôt blame it on anything or anyone.&lt;/p&gt;

&lt;p&gt;When it came to try to get your first programming job or a career in programming, if you failed to do that, it was because you chose to fail.&lt;/p&gt;

&lt;h2 id=&quot;my-own-experience&quot;&gt;My Own Experience&lt;/h2&gt;

&lt;p&gt;In case you weren‚Äôt aware, I started my programming journey by enrolling to a Web Development Bootcamp.&lt;/p&gt;

&lt;p&gt;In my cohort, from what I can tell, only 2 people including myself have become developers from that experience. That‚Äôs not to say that &lt;strong&gt;everyone&lt;/strong&gt; that didn‚Äôt turn into developers didn‚Äôt get value from the Bootcamp but if from what I can tell they didn‚Äôt become software developers.&lt;/p&gt;

&lt;p&gt;Some were able to use their programming knowledge to help with their own businesses or career paths, while not necessarily coding related but within the industry they ended up in.&lt;/p&gt;

&lt;h3 id=&quot;i-couldve-failed&quot;&gt;I could‚Äôve failed&lt;/h3&gt;

&lt;p&gt;I could‚Äôve easily been one of the people didn‚Äôt become a developer from this. I remember that I really struggled to grasp the concepts and basics of programming during the course.&lt;/p&gt;

&lt;p&gt;In fact, when initially applying for this bootcamp, &lt;strong&gt;I was rejected twice&lt;/strong&gt;, the reason was that during the technical test, I had failed to demonstrate good problem solving skills as well as any proof that I studied particularly hard on the days leading up to the day of the interview and technical test.&lt;/p&gt;

&lt;p&gt;I was told both times that I have poor problem solving skills and would struggle to succeed in this career path. I remember the second time, I basically had to beg to be given a chance to enrol, and I said that if I failed, then it would be on me because I‚Äôm prepared to lose the tuition.&lt;/p&gt;

&lt;p&gt;Having given the opportunity, I chose to work hard. That said, he was right, my problem solving skills were terrible and I struggled. I was able to do very little and getting a job after this was really tough.&lt;/p&gt;

&lt;h2 id=&quot;my-first-few-roles&quot;&gt;My First Few Roles&lt;/h2&gt;

&lt;p&gt;I managed to find a start-up company who were willing to take me on for free as an internship. I had worked there for 3 months (had my expenses covered).&lt;/p&gt;

&lt;p&gt;I helped with their website but did a poor job (I remember I used inline CSS üò±), I was then tasked with trying to create a prototype mobile app and also learning how to create mobile apps using ‚ÄúRuby Motion‚Äù, the whole thing was a bit of a mess, but I persevered and ended up leveraging this experience to not only get a recommendation on LinkedIn but a reference in order to progress to the next role.&lt;/p&gt;

&lt;p&gt;I really had no idea what I was doing. During this time I was also tasked to do illustration and animation for these start ups, even then the quality and standard was poor, my prospects were not looking good.&lt;/p&gt;

&lt;h2 id=&quot;little-talent&quot;&gt;Little Talent&lt;/h2&gt;

&lt;p&gt;The reality is that I have some experience but very little talent for animation, illustration and problem solving.&lt;/p&gt;

&lt;p&gt;These are things I acknowledge but I didn‚Äôt let that stop me from aiming higher, I instead took advantage of other qualities I had, such as good work ethics, being easy to work with and striving to learn more on the job or in my own time.&lt;/p&gt;

&lt;p&gt;And therefore, I was able to get that reference in order to move to the next role.&lt;/p&gt;

&lt;p&gt;I used some free time to learn to code, build projects and tried to expose myself to programming related topics through websites like Reddit or HackerNews for example.&lt;/p&gt;

&lt;p&gt;I kept my CV up to date, made sure I spoke with recruiters and send applications where I could.&lt;/p&gt;

&lt;p&gt;Each subsequent job was a milestone, and with each milestone I was able to get better and grow. Not only was my knowledge in programming growing, but my salary and earning potential. Growing on the job made it easier because I was being paid to do it (among providing a service to my employers).&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;Admittedly I didn‚Äôt do as much self-learning or study as I ‚Äúshould‚Äù have. But I made efforts where I could and that reflects my growth from a career standpoint.&lt;/p&gt;

&lt;p&gt;Ultimately, there are some who have grown substantially more than I have in less time, as well as grown less than I have in the same amount of time.&lt;/p&gt;

&lt;p&gt;I only have myself to blame and if I wanted to get better, I need to choose to get better and take the steps necessary to achieve that.&lt;/p&gt;

&lt;p&gt;And any successes I have achieved thus far, were due to me choosing to succeed in that space.&lt;/p&gt;

&lt;p&gt;Holding ourselves accountable instead of blaming and being a victim, is the mindset that will greatly improve your outlook on life once you adopt it.&lt;/p&gt;</content><author><name>James Lieu</name></author><category term="Programming" /><summary type="html">Probably not the answer you're expecting.</summary></entry><entry><title type="html">Choosing Your First Programming Language</title><link href="http://jameslieu.co.uk/choosing-your-first-programming-language/" rel="alternate" type="text/html" title="Choosing Your First Programming Language" /><published>2021-03-30T00:00:00+01:00</published><updated>2021-03-30T00:00:00+01:00</updated><id>http://jameslieu.co.uk/choosing-your-first-programming-language</id><content type="html" xml:base="http://jameslieu.co.uk/choosing-your-first-programming-language/">&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/-NjvNJspF8s&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Choosing your first programming language can be one of the most important decisions made when starting your programming journey.&lt;/p&gt;

&lt;p&gt;It‚Äôs crucial because this will be the one you‚Äôll be &lt;strong&gt;learning&lt;/strong&gt; with. This could be anywhere between:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Building projects&lt;/li&gt;
  &lt;li&gt;Reading or contributing to existing source code&lt;/li&gt;
  &lt;li&gt;Learning programming principles or concepts&lt;/li&gt;
  &lt;li&gt;Solving programming challenges&lt;/li&gt;
  &lt;li&gt;Debugging&lt;/li&gt;
  &lt;li&gt;Searching for solutions when you‚Äôre stuck using Google&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You‚Äôre able to achieve all of this with most programming languages, but some are in better positions than others to make learning how to code substantially easier.
Not only this, but to position yourself, so that you can get your first programming job as soon as possible.&lt;/p&gt;

&lt;p&gt;Here are some steps you can take to choose the right programming language for you.&lt;/p&gt;

&lt;h2 id=&quot;1-create-a-shortlist&quot;&gt;1. Create a Shortlist&lt;/h2&gt;

&lt;p&gt;The first step I would recommend is to create a shortlist. It‚Äôs not too difficult to find some websites or even videos on which are the most popular languages in 2021.
The shortlist you create could be different from others depending on what path you want to take.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/choose-programming-language-1.jpg&quot; style=&quot;height: 200px; margin: 10px 0;&quot; /&gt;
For example, if you wanted to be a front-end or UI developer then really the language you‚Äôll want to go with is JavaScript.
HTML and CSS are not programming languages but you would need to learn those as well, often people would recommend you learn those first.
I think you should learn JavaScript first before those two.&lt;/p&gt;

&lt;p&gt;Another example would be Game Development, games can theoretically be created using any programming language, but professionally, it would be between C# or C++.&lt;/p&gt;

&lt;p&gt;Here are some sources on what programming languages are popular.&lt;/p&gt;

&lt;h4 id=&quot;stack-overflow-survey&quot;&gt;Stack Overflow Survey&lt;/h4&gt;
&lt;p&gt;The &lt;a href=&quot;https://insights.stackoverflow.com/survey/2020#most-popular-technologies&quot;&gt;Stack Overflow survey 2020&lt;/a&gt; is a popular comprehensive annual developer survey.&lt;/p&gt;

&lt;p&gt;You can get a good idea on what is popular among developers, what programming languages they enjoy, what they would like to start using or learning , and also what they‚Äôre using professionally, which indicates it‚Äôs job prospects.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/choose-programming-language-2.jpg&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;google-it&quot;&gt;Google it&lt;/h4&gt;
&lt;p&gt;You can Google &lt;a href=&quot;https://www.google.com/search?q=most+popular+programming+languages+2021&quot;&gt;most popular programming languages&lt;/a&gt; as well.
This topic is very popular and has many articles or videos on the subject, and from what I‚Äôve seen there is a degree of consistency between them all. So it shouldn‚Äôt take long at all to create your shortlist.&lt;/p&gt;

&lt;h4 id=&quot;tiobe-index&quot;&gt;Tiobe Index&lt;/h4&gt;
&lt;p&gt;The &lt;a href=&quot;https://www.tiobe.com/tiobe-index/&quot;&gt;Tiobe Index&lt;/a&gt; is a good indicator on what‚Äôs popular. It‚Äôs updated monthly and ratings are based on the number of skilled engineers world-wide, courses and third party vendors.
Popular search engines such as Google, Bing, Yahoo!, Wikipedia, Amazon, and YouTube are used to calculate the ratings. It‚Äôs not an indicator of what is the best language but how frequent a language is mentioned on the internet, I wouldn‚Äôt rely solely on this to choose your programming language but you can use this data to see trends. This is how I started to realise that, Ruby, my first programming language is starting to decline in popularity.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/choose-programming-language.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once you have a shortlist, my recommendation is to narrow it down to 3 options.&lt;/p&gt;

&lt;h2 id=&quot;2-consider-the-most-important-factor&quot;&gt;2. Consider the Most Important Factor&lt;/h2&gt;

&lt;p&gt;The most important factor, in my opinion, is to decide based on job opportunities in your area.&lt;/p&gt;

&lt;p&gt;I assume that as a junior, you want to learn to code in order to pursue a career in programming.&lt;/p&gt;

&lt;p&gt;If so, choosing a programming language where there are many opportunities available to you is a priority, especially when you have little to no professional experience.&lt;/p&gt;

&lt;p&gt;The priority should not be simply, learning what language looks the most pretty, the easiest to learn or even necessarily choosing it based how many people like it.&lt;/p&gt;

&lt;p&gt;It would be more effective to prioritize getting a job because once you do, your ability to learn dramatically increases, you‚Äôll have gained some benefits such as:
	- a live application to contribute to
	- a team of developers including seniors to work with and learn from
	- The opportunity to grow your network
	- Gain professional experience&lt;/p&gt;

&lt;p&gt;More importantly, you‚Äôre being paid a salary while learning. The starting amount may not be that great but the true value of getting the job is the experience and opportunity of working you will have gained.&lt;/p&gt;

&lt;p&gt;Once you get your foot through the door, then your career trajectory will begin to go up. In fact, your salary and earning potential will also go up, but the first hurdle is to get that job.&lt;/p&gt;

&lt;h4 id=&quot;why-dont-i-just-learn-python&quot;&gt;Why Don‚Äôt I Just Learn Python?&lt;/h4&gt;

&lt;p&gt;Python is considered a very beginner friendly language, and would be the one I would typically recommend. In fact, most of the ‚Äúmost popular programming language‚Äù articles or videos on the internet will likely have Python in their list.&lt;/p&gt;

&lt;p&gt;The issue is if you plan to build your career as a Python developer, what good is it, to learn python if there are no job opportunities available to you because of where you live?
If there were then absolutely go for Python as your first programming language.&lt;/p&gt;

&lt;p&gt;This may no longer be a problem because more and more companies are offering remote working opportunities.&lt;/p&gt;

&lt;p&gt;Otherwise, the exception is to learn it ONLY if you‚Äôre learning it as a hobby with no intention of getting a job with it in the near future.
Learning Python in order to learn programming concepts and a base &lt;strong&gt;before&lt;/strong&gt; switching to a different programming language is also a viable strategy but will stagnate your learning because you would need additional time to learn the features of the new programming language.&lt;/p&gt;

&lt;p&gt;My recommendation is to choose only one language and focus ONLY on this, there are going to be other languages you may need to learn as part of your job such as HTML/CSS maybe JavaScript if you‚Äôre considering a full-stack developer role. I myself, switched server-side language a few times in my professional career, and I think it stagnated my learning to some degree.&lt;/p&gt;

&lt;h4 id=&quot;example&quot;&gt;Example&lt;/h4&gt;

&lt;p&gt;On &lt;a href=&quot;https://indeed.co.uk&quot;&gt;indeed.co.uk&lt;/a&gt;, in London there are 2000+ Python developer jobs, but if you lived in a location such as Milton Keyes, there are fewer than 20 job applications,&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/choose-programming-language-4.jpg&quot; style=&quot;margin: 10px 0; border: 1px solid #eee&quot; /&gt;
&lt;em&gt;There are &lt;strong&gt;2,130 Python Developer jobs&lt;/strong&gt; in London 30/03/2021&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/choose-programming-language-3.jpg&quot; style=&quot;margin: 10px 0; border: 1px solid #eee&quot; /&gt;
&lt;em&gt;There are only &lt;strong&gt;20 Python Developer jobs&lt;/strong&gt; in Milton Keynes 30/03/2021&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Note that these are general Python developer jobs which includes mid to senior roles, so those opportunities may not be available for juniors anyway.
But this is true for any programming language job, more job opportunities increases likelihood to not only get an interview but to potentially receive a job offer.&lt;/p&gt;

&lt;h2 id=&quot;tooling&quot;&gt;Tooling&lt;/h2&gt;

&lt;p&gt;The tooling available is something to think about, although not mandatory.
Anything that will make working in programming easier is worth considering.&lt;/p&gt;

&lt;p&gt;Being able to easily debug code, leverage open-source libraries for specific requirements, easily set up your development environment, deployment is not trivial.
Being blocked from learning because you cannot get a library to work or to set up your debugger and having to investigate how, can be very frustrating and waste a lot time.&lt;/p&gt;

&lt;h2 id=&quot;community&quot;&gt;Community&lt;/h2&gt;

&lt;p&gt;An active community for the programming language you choose is very useful, because you‚Äôre able to leverage their knowledge and experience by asking questions, finding related blog posts or articles,
You can join forums or online communities like reddit and it‚Äôs easier to find solutions to problems from your own projects if other people have also experienced and shared it.&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;So these are some of the things you can do to help choose your first programming language. Once you learn the very basics of programming such as data types, variables, loops methods, classes etc, then it‚Äôs not a bad idea to look at the other programming languages in your shortlist&lt;/p&gt;

&lt;p&gt;If you wanted my opinion, I would recommend 3 languages to start with as a beginner.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;C#&lt;/li&gt;
  &lt;li&gt;JavaScript&lt;/li&gt;
  &lt;li&gt;Python&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But if you only wanted my opinion on which to choose first, I may be biased because I‚Äôm a C# developer, but in my years as a programmer, I have used numerous programming languages professionally such as Ruby, PHP, JavaScript, TypeScript and also experienced some others such as Golang. I would go with C# every time.&lt;/p&gt;

&lt;p&gt;Having experienced those other languages first hand, I can confidently say that C# is the one I wished I started learning first and I would recommend this programming language the most. That said you can‚Äôt go wrong with JavaScript or Python either so long as there are job opportunities for these languages in your area.&lt;/p&gt;

&lt;p&gt;If there are very few job opportunities using these programming languages in your area, then figure out which ones are, Java, PHP, Ruby, Golang, Rust, C++ are also viable options but I would only choose these based on job opportunities, because as a first programming language, there are going to be reasons why they‚Äôre less suited for beginners compared to the ones I am recommending.&lt;/p&gt;

&lt;p&gt;That said, I‚Äôm just a random guy on the internet, don‚Äôt just take my word on it, but I hope this post has been useful for you, to at least consider my thoughts and logic behind my choices.&lt;/p&gt;</content><author><name>James Lieu</name></author><category term="Programming" /><summary type="html">There are a few factors to consider before deciding which one to go with.</summary></entry><entry><title type="html">Git For Junior Developers</title><link href="http://jameslieu.co.uk/git-for-junior-developers/" rel="alternate" type="text/html" title="Git For Junior Developers" /><published>2021-03-19T00:00:00+00:00</published><updated>2021-03-19T00:00:00+00:00</updated><id>http://jameslieu.co.uk/git-for-junior-developers</id><content type="html" xml:base="http://jameslieu.co.uk/git-for-junior-developers/">&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/22Y9LTswLME&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/git-logo.jpg&quot; style=&quot;height:100px; margin: auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When learning Git, it had taken a while to actually understand it.&lt;/p&gt;

&lt;p&gt;Having worked as a developer for a number of years I‚Äôve found that I only really use a handful of git commands and so any learning for less commonly used commands like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cherry picking&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Rebase&lt;/code&gt; was really unnecessary as a junior.&lt;/p&gt;

&lt;p&gt;Those commands had a larger learning curve and often led to confusion and frustration when trying to use them.&lt;/p&gt;

&lt;p&gt;I‚Äôve also experienced working in a team who have never worked with Git and the tech lead wanted to move the whole team to Git without actually teaching them, this led to numerous problems as well as my own challenges trying to teach some of them. I‚Äôve written a blog post about it &lt;a href=&quot;/git-workflow&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So the purpose of this post is to recommend &lt;strong&gt;specifically&lt;/strong&gt; which commands are most commonly used (anecdotally), and what juniors need to know &lt;em&gt;at minimum&lt;/em&gt; to get by in the industry.&lt;/p&gt;

&lt;h2 id=&quot;all-you-need-to-know-&quot;&gt;All you need to know üëå&lt;/h2&gt;

&lt;h4 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Know how to use the command line interface.
    &lt;ul&gt;
      &lt;li&gt;I recommend NOT using a Git GUI until you understand the basics&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Install Git to your local machine&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;basic-workflow&quot;&gt;Basic workflow&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/git-workflow-5.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here is a flowchart of what your basic workflow will look like, I‚Äôve highlighted the commands you use to achieve each step. This is a fairly simplified chart but essentially this will be how you work with Git majority of the time.&lt;/p&gt;

&lt;p&gt;There are going to be some steps inbetween depending on edge cases such as stashing code or reverting code using Git if you needed to, but otherwise this chart is pretty much Git in a nutshell.&lt;/p&gt;

&lt;h4 id=&quot;introduction&quot;&gt;Introduction&lt;/h4&gt;

&lt;p&gt;Git is software for tracking changes in any set of files, usually used for coordinating work among programmers collaboratively developing source code during software development.&lt;/p&gt;

&lt;p&gt;In other version control systems, each developer gets a working copy that points back to a single central repository.&lt;/p&gt;

&lt;p&gt;Git, however, is a distributed version control system. Instead of a working copy, each developer gets their own local repository, complete with a fully-tracked history.&lt;/p&gt;

&lt;p&gt;This means that it is easy for developers to collaborate and even prevents any one developer from blocking the work from another because they would each have their own local repository.&lt;/p&gt;

&lt;h4 id=&quot;master&quot;&gt;Master&lt;/h4&gt;
&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;master&lt;/code&gt; branch is the convention name for the ‚Äúmain‚Äù branch which is considered the code used for production. This branch is the base which you build upon, and so you would ‚Äúbranch‚Äù off this one to achieve to add new features or changes.&lt;/p&gt;

&lt;h4 id=&quot;branch&quot;&gt;Branch&lt;/h4&gt;
&lt;p&gt;Think of &lt;strong&gt;branching&lt;/strong&gt; as cloning or duplicating the code base, any edits you make to a new &lt;strong&gt;branch&lt;/strong&gt; will not affect the original. When you‚Äôre edits are complete you can then &lt;strong&gt;commit&lt;/strong&gt; those edits and then &lt;strong&gt;merge&lt;/strong&gt; your edits with the original (where you branched off from).&lt;/p&gt;

&lt;h4 id=&quot;commit&quot;&gt;Commit&lt;/h4&gt;
&lt;p&gt;Ok to start, the first clarification to mention, is that Git tracks code with commits.&lt;/p&gt;

&lt;p&gt;Think of Commits as the &lt;strong&gt;versions&lt;/strong&gt; of the codebase, and each commit is it‚Äôs own version. When a developer is working on a Git repository, they‚Äôre usually working with the last or latest commit as that is the most up-to-date version of the codebase.&lt;/p&gt;

&lt;p&gt;In fact, a developer can theoretically choose any existing commit on a Git repository they wanted to work on. So if it helps, Git commits are basically unique versions of the code base. Hence version control.&lt;/p&gt;

&lt;h4 id=&quot;feature-branches&quot;&gt;Feature Branches&lt;/h4&gt;
&lt;p&gt;Git utilizes a feature called branching. Although the word branch is synonymous with a branch of a tree or subdivision of a bank for example, in Git, it is actually easier, in my opinion to think of feature branches as a clone of the code base.&lt;/p&gt;

&lt;p&gt;For example, if you have a project which uses Git, that project will have a branch by default. Git allows you to create a new branch on that project which essentially has the same state of the code base as the original branch you‚Äôve branched off of.&lt;/p&gt;

&lt;p&gt;Any edits you make to this new branch will not affect the original. When you‚Äôre edits are complete you can then commit those edits which at that time is only available to the branch you‚Äôre on. And you then have the option to merge your commits with the original branch.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/git-workflow-1.png&quot; style=&quot;height: 500px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The ability to branch off another branch grants numerous ways to collaborate or contribute to a project.&lt;/p&gt;

&lt;h2 id=&quot;local-respository-vs-remote-repository-&quot;&gt;Local Respository vs Remote Repository üöÄ&lt;/h2&gt;
&lt;p&gt;A project where Git is used is known as a &lt;strong&gt;repository&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Local&lt;/strong&gt; repository means the project on your local machine or computer and is only available to you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote&lt;/strong&gt; repository is the project which is hosted by a Git based hosting provider i.e. &lt;a href=&quot;https://github.com&quot;&gt;GitHub&lt;/a&gt;, &lt;a href=&quot;https://gitlab.com&quot;&gt;GitLab&lt;/a&gt; or &lt;a href=&quot;https://bitbucket.com&quot;&gt;BitBucket&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The remote repository is what allows teams to collaborate against the same code base, making changes to code will almost always be done an a computer, so we need a ‚Äúlocal‚Äù copy of the code base to do this, when you‚Äôve made your branch, edits and commits.&lt;/p&gt;

&lt;p&gt;You can then &lt;strong&gt;push&lt;/strong&gt; branches including &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;master&lt;/code&gt; to the remote making it available to your team via the internet. Your team can then have the option of &lt;strong&gt;pulling&lt;/strong&gt; that code back onto &lt;em&gt;their&lt;/em&gt; local machine and thus be able to access and make edits of their own.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/git-workflow-3.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The key thing to bear in mind is that you need to actively try to keep both your local and remote repository as up to date as possible.
This also includes your local branches where you initially branched off master, but maybe later, the master branch has been updated since. So to deal with this, you can update your ‚Äúlocal‚Äù master then &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;merge&lt;/code&gt; your updated local master with your local branch.&lt;/p&gt;

&lt;p&gt;So pushing and pulling regularly is a good habit to have.&lt;/p&gt;

&lt;h2 id=&quot;advantages&quot;&gt;Advantages&lt;/h2&gt;

&lt;p&gt;Some of the other advantages relevant to developers are:&lt;/p&gt;

&lt;h4 id=&quot;being-able-to-see-whats-changed&quot;&gt;Being able to see what‚Äôs changed.&lt;/h4&gt;
&lt;p&gt;So Git tracks changes allowing you to see what has been changed since the last version. You can use that to quickly identify if any lines can be improved or even missing.&lt;/p&gt;

&lt;h4 id=&quot;quickly-revert-any-changes-you-may-not-want&quot;&gt;Quickly revert any changes you may not want,&lt;/h4&gt;
&lt;p&gt;Some developers may have used comments or logging code for debugging. Being able to see those lines and easily revert them is very useful.&lt;/p&gt;

&lt;p&gt;Or even better, you may wanted to make a proof of concept or refactor some code but decide against committing that code, you can easily reverse all untracked or unstaged changes back to it‚Äôs last commit.&lt;/p&gt;

&lt;h4 id=&quot;the-source-code-is-easily-accessible&quot;&gt;The source code is easily accessible&lt;/h4&gt;
&lt;p&gt;You can push your source code to a Git hosting service like Github, and anyone who has access can easily download the code to their local machine.&lt;/p&gt;

&lt;h2 id=&quot;my-most-used-git-commands-&quot;&gt;My Most Used Git Commands üëç&lt;/h2&gt;

&lt;p&gt;So I‚Äôve looked at my &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.bash_history&lt;/code&gt; file, it records the last 2000 commands, so as of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;18/03/2021&lt;/code&gt; my most common &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git&lt;/code&gt; commands are:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Command&lt;/th&gt;
      &lt;th&gt;Count&lt;/th&gt;
      &lt;th&gt;Notes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;git status&lt;/td&gt;
      &lt;td&gt;400&lt;/td&gt;
      &lt;td&gt;I spam this to check for unstaged/staged code, and to look at branch name&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git checkout&lt;/td&gt;
      &lt;td&gt;173&lt;/td&gt;
      &lt;td&gt;Multiple uses, create branches, change branches, reverse changes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git pull&lt;/td&gt;
      &lt;td&gt;115&lt;/td&gt;
      &lt;td&gt;Update en existing branch, commonly used to update &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;master&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git push&lt;/td&gt;
      &lt;td&gt;81&lt;/td&gt;
      &lt;td&gt;Always with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;origin &amp;lt;branch&amp;gt;&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git commit&lt;/td&gt;
      &lt;td&gt;40&lt;/td&gt;
      &lt;td&gt;I use this with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-m&lt;/code&gt; or to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--amend&lt;/code&gt; them&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git add&lt;/td&gt;
      &lt;td&gt;37&lt;/td&gt;
      &lt;td&gt;Sometimes I use a git editor to stage code, but I‚Äôm surprised this isn‚Äôt higher&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git diff&lt;/td&gt;
      &lt;td&gt;34&lt;/td&gt;
      &lt;td&gt;I only use this to check files changes before reversing changes with checkout&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git branch&lt;/td&gt;
      &lt;td&gt;35&lt;/td&gt;
      &lt;td&gt;I only use this to delete my local branches with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-D&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git log&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;Only used to check logged commits either for myself or to see timestamp of latest&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git stash&lt;/td&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;Stashing code and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pop&lt;/code&gt;, for when needed to switch branches without commit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git fetch&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;Sometimes, new branches on remote need to be fetched&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git merge&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;This is really used to update existing branches, I merge code to master via BitBucket&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git reset&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;Used to undo a commit but I tend to use VSCode‚Äôs built in GUI as it‚Äôs easier&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git rebase&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;Only if my local master needed updating alongside my local branch I was working with&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git init&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;Initialize git for a directory, not commonly used when compared with others&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git clone&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;Used to clone code in remote repository, not commonly used and usually copy/paste&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git config&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;Use to set config, primarily changing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;autocrlf&lt;/code&gt; to false, when running into issues&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;It‚Äôs worth noting that I also use &lt;a href=&quot;https://www.sourcetreeapp.com/&quot;&gt;SourceTree&lt;/a&gt; when reviewing code changes. So staging and commiting code from that GUI is not factored in, as well as bash history only recording the last 2000 lines.&lt;/p&gt;

&lt;p&gt;Although there is a sizable list here the only ones I use on a day-to-day basis and recommend learning at minimum are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;git status&lt;/li&gt;
  &lt;li&gt;git checkout&lt;/li&gt;
  &lt;li&gt;git pull&lt;/li&gt;
  &lt;li&gt;git push&lt;/li&gt;
  &lt;li&gt;git commit&lt;/li&gt;
  &lt;li&gt;git add&lt;/li&gt;
  &lt;li&gt;git merge&lt;/li&gt;
  &lt;li&gt;git remote (maybe)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;conclusion-Ô∏è&quot;&gt;Conclusion üíÅ‚Äç‚ôÇÔ∏è&lt;/h2&gt;

&lt;p&gt;Essentially, in my opinion, this is &lt;strong&gt;all&lt;/strong&gt; a junior developer needs to know to get by with Git. If you can learn the minimal commands and some grounding on some key features as mentioned, you should have enough to get by with Git. Anything else can be handled pragmatically and Googled when you encounter a problem. Even things like ‚Äúmerge conflicts‚Äù can be dealt with on the job and often requires direct communication with the team member, not necessary to practice in order to get started.&lt;/p&gt;

&lt;p&gt;While this is a very basic introduction to Git and there are many advanced features of Git that wasn‚Äôt included in this post.&lt;/p&gt;

&lt;p&gt;But by applying the 80/20 rule, where 20% of the commands/features of Git will yield 80% of the results.&lt;/p&gt;

&lt;p&gt;There are different Git workflows which would be good to learn but again, not mandatory and can be different depending on the team.
I‚Äôve written a blog post about working with a particular Git workflow &lt;a href=&quot;/git-workflow&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sure if you wanted to level up your Git knowledge and understand what other features it has, then of course feel free to learn them, my point is that, anecdotally, I‚Äôve found that learning and even trying to remember those features you‚Äôre not likely to use is not the best use of time, especially as a junior where that time can be used more effectively.&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;The reason I wanted to write this post was primarily to do with making it as simple to learn a topic as possible.&lt;/p&gt;

&lt;p&gt;In my experience, when I‚Äôve tried to learn something new, I find that I‚Äôm spending too much time on a topic and often never utilizing that knowledge. Git was a perfect example of this and having worked with it for a while I actually can serve up some data to prove my point.&lt;/p&gt;

&lt;p&gt;I think I‚Äôll create more of these kinds of posts, not only to make it simple for anyone reading this, but to revisit some of the topics myself.&lt;/p&gt;

&lt;p&gt;For fun, I also saw a few git typos in my &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.bash_history&lt;/code&gt; file, often occuring when I spam &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git status&lt;/code&gt;:
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git satus&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git stat&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git stattus&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git staus&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git statua&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git stauts&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git statu&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git dif&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git stasj&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;ü§∑&lt;/p&gt;

&lt;h3 id=&quot;external-sources-&quot;&gt;External sources üí°&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://git-scm.com/&quot;&gt;Git&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/git-workflow&quot;&gt;Git Workflow (blog post)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Git&quot;&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;</content><author><name>James Lieu</name></author><category term="Programming" /><summary type="html">How can we simplify learning Git?</summary></entry><entry><title type="html">Configuring ASP.NET Core: The Startup Class</title><link href="http://jameslieu.co.uk/dotnet-config-startup/" rel="alternate" type="text/html" title="Configuring ASP.NET Core: The Startup Class" /><published>2021-03-17T00:00:00+00:00</published><updated>2021-03-17T00:00:00+00:00</updated><id>http://jameslieu.co.uk/dotnet-config-startup</id><content type="html" xml:base="http://jameslieu.co.uk/dotnet-config-startup/">&lt;p&gt;In my goal to further improve my understanding of C# .NET Core and ASP.NET Core, I‚Äôve realised that I don‚Äôt fully understand how the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Startup.cs&lt;/code&gt; class actually works.&lt;/p&gt;

&lt;p&gt;This code is usually pre-generated by Visual Studio and I‚Äôve never really needed to add to or edit this class, including at my job. Whenever I did, it was often to copy/paste code from documentation when using new libraries i.e. AutoFac.&lt;/p&gt;

&lt;p&gt;But the truth is I don‚Äôt understand how this class actually works or how it is intended to be used. So today I had thought to actually read the documentation to learn more.&lt;/p&gt;

&lt;h2 id=&quot;the-startup-class-&quot;&gt;The Startup Class üë∑&lt;/h2&gt;

&lt;p&gt;ASP.NET Core apps uses a Startup class, named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Startup&lt;/code&gt; by convention.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Startup&lt;/code&gt; class Includes a Configure method to create the app‚Äôs request processing pipeline.&lt;/p&gt;

&lt;p&gt;It also &lt;strong&gt;optionally&lt;/strong&gt; includes a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ConfigureServices&lt;/code&gt; method to configure the app‚Äôs services.&lt;/p&gt;

&lt;p&gt;A service is a reusable component that provides app functionality and are registered in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ConfigureServices&lt;/code&gt; to be consumed across the app via dependency injection (DI) or ApplicationServices.&lt;/p&gt;

&lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Startup&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IConfigurationRoot&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Configuration&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ILifetimeScope&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AutofacContainer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Startup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IWebHostEnvironment&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ConfigurationBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;SetBasePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ContentRootPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddJsonFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;appsettings.json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;optional&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reloadOnChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddJsonFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$&quot;appsettings.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EnvironmentName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;optional&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddEnvironmentVariables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Configuration&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ConfigureServices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IServiceCollection&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddControllers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddDbContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TGTContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseSqlServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Configuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetConnectionString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;TGTContext&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)));&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ConfigureContainer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ContainerBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;RegisterModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;AutofacModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Configure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IApplicationBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IWebHostEnvironment&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsDevelopment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseDeveloperExceptionPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseRouting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseAuthorization&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseEndpoints&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endpoints&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;endpoints&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;MapControllers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Startup&lt;/code&gt; class is specified when the app‚Äôs &lt;strong&gt;Host&lt;/strong&gt; is built and is typically specified by calling the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WebHostBuilderExtensions.UseStartup&amp;lt;TStartup&amp;gt;&lt;/code&gt; method on the host builder:&lt;/p&gt;

&lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Program&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;CreateDefaultBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ConfigureLogging&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logging&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddConsole&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseServiceProviderFactory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;AutofacServiceProviderFactory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ConfigureWebHostDefaults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webHostBuilder&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;webHostBuilder&lt;/span&gt;
                      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseContentRoot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetCurrentDirectory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
                      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseIISIntegration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UseStartup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Startup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// HERE is where the Startup class is specified&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The host provides services that are available to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Startup&lt;/code&gt; class constructor. The app adds additional services via &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ConfigureServices&lt;/code&gt;. Both the host and app services are available in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Configure&lt;/code&gt; and throughout the app.&lt;/p&gt;

&lt;p&gt;Only the following service types can be injected into the Startup constructor when using the Generic Host (IHostBuilder):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IWebHostEnvironment&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IHostEnvironment&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IConfiguration&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-configureservices-method-&quot;&gt;The ConfigureServices Method üõ†&lt;/h2&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ConfigureServices&lt;/code&gt; method is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Optional&lt;/li&gt;
  &lt;li&gt;Called by the hose &lt;strong&gt;before&lt;/strong&gt; the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Configure&lt;/code&gt; method to configure the app‚Äôs services.&lt;/li&gt;
  &lt;li&gt;Where configuration options are set by convention
    &lt;ul&gt;
      &lt;li&gt;The host may configure some services before Startup methods are called however.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For features that require substantial setup, there are Add{Service} extension methods on IServiceCollection.
For example, AddDbContext, AddDefaultIdentity, AddEntityFrameworkStores, and AddRazorPages&lt;/p&gt;

&lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Startup&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Startup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IConfiguration&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;configuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Configuration&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;configuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IConfiguration&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Configuration&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ConfigureServices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IServiceCollection&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddDbContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ApplicationDbContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseSqlServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Configuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetConnectionString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;DefaultConnection&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)));&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddDefaultIdentity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IdentityUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SignIn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RequireConfirmedAccount&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddEntityFrameworkStores&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ApplicationDbContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddRazorPages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Adding services to the service container makes them available within the app and in the Configure method. The services are resolved via dependency injection.&lt;/p&gt;

&lt;h2 id=&quot;the-configure-method-&quot;&gt;The Configure Method ‚öô&lt;/h2&gt;

&lt;p&gt;The Configure method is used to specify how the app responds to HTTP requests.&lt;/p&gt;

&lt;p&gt;The request pipeline is configured by adding middleware components to an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IApplicationBuilder&lt;/code&gt; instance.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IApplicationBuilder&lt;/code&gt; is available to the Configure method, but it isn‚Äôt registered in the service container. Hosting creates an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IApplicationBuilder&lt;/code&gt; and passes it directly to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Configure&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Startup&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Startup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IConfiguration&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;configuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Configuration&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;configuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IConfiguration&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Configuration&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ConfigureServices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IServiceCollection&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddRazorPages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Configure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IApplicationBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IWebHostEnvironment&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsDevelopment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseDeveloperExceptionPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseExceptionHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/Error&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseHsts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseHttpsRedirection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseStaticFiles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseRouting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseAuthorization&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseEndpoints&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endpoints&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;endpoints&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;MapRazorPages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Each Use extension method adds one or more middleware components to the request pipeline. For instance, UseStaticFiles configures middleware to serve static files.&lt;/p&gt;

&lt;p&gt;Each middleware component in the request pipeline is responsible for invoking the next component in the pipeline or short-circuiting the chain, if appropriate.&lt;/p&gt;

&lt;p&gt;Additional services, such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IWebHostEnvironment&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ILoggerFactory&lt;/code&gt;, or anything defined in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ConfigureServices&lt;/code&gt;, can be specified in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Configure&lt;/code&gt; method signature.
These services are injected if they‚Äôre available.&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;It‚Äôs interesting how little I knew about configuring a .NET Core app. In many ways, I don‚Äôt actually &lt;em&gt;need&lt;/em&gt; to know, I managed to work with .Net Core for a few years and not fully understand how all of this is set up. It‚Äôs like not needing to know how Windows OS works behind the scenes, you‚Äôd just expect it to work ‚Äúout of the box‚Äù.&lt;/p&gt;

&lt;p&gt;This is probably due to the tooling and pre-generated code that comes with working on .NET and C# which is likely designed to be as streamlined as possible for new devs, which is something I really like about this tech stack.&lt;/p&gt;

&lt;p&gt;That said, when it‚Äôs time to customise or add new configuration or even to read how an existing application is configured, it can lead to confusion and challenges without understanding how that part of the code works, I‚Äôve also found it difficult to understand exceptions or errors, furthermore, Googling those and finding anything helpful on StackOverflow.&lt;/p&gt;

&lt;p&gt;The topic of configuration for .NET Core alone seems to be huge and perhaps learning &lt;em&gt;everything&lt;/em&gt; is not the most productive use of time, that said, understanding some fundamentals is not a bad idea.&lt;/p&gt;

&lt;p&gt;This post in general was &lt;em&gt;copied&lt;/em&gt; from the Microsoft documentation, but writing it here at least allows me to &lt;em&gt;read&lt;/em&gt; the docs and try to put it in my own words (although most of it was a direct copy).&lt;/p&gt;

&lt;p&gt;There‚Äôs more to be learnt, but maybe best to do it pragmatically when I encounter an issue.&lt;/p&gt;

&lt;h3 id=&quot;external-sources-&quot;&gt;External sources üí°&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/fundamentals/startup?view=aspnetcore-5.0&quot;&gt;App startup in ASP.NET Core&lt;/a&gt;&lt;/p&gt;</content><author><name>James Lieu</name></author><category term="Programming" /><summary type="html">Learning .Net Core configuration</summary></entry><entry><title type="html">Autofac with .Net Core</title><link href="http://jameslieu.co.uk/autofac-with-dotnet-core/" rel="alternate" type="text/html" title="Autofac with .Net Core" /><published>2021-02-16T00:00:00+00:00</published><updated>2021-02-16T00:00:00+00:00</updated><id>http://jameslieu.co.uk/autofac-with-dotnet-core</id><content type="html" xml:base="http://jameslieu.co.uk/autofac-with-dotnet-core/">&lt;p&gt;&lt;img src=&quot;/assets/media/autofac-1.png&quot; style=&quot;height:200px; margin: auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I‚Äôve recently added a post about Inversion of Control and IoC Containers in a previous post &lt;a href=&quot;/inversion-of-control&quot;&gt;here&lt;/a&gt;, I also added another which covers dependency injection. Now I wanted to provide an example of an IoC Container used which will solve some of the issues that can arise when using dependency injection for more complex classes with many dependencies. And so I would like to write about this particular IoC Container: &lt;a href=&quot;https://autofac.org/&quot;&gt;Autofac&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;what-is-autofac&quot;&gt;What is Autofac?&lt;/h2&gt;

&lt;p&gt;Autofac is an Inversion of Control Container for .Net Core, ASP.NET Core, .Net Framework, Universal Windows apps and more. With this framework you can build containers with lambdas, types or pre-built instances of components and can also scan dependencies for registration.&lt;/p&gt;

&lt;h2 id=&quot;example&quot;&gt;Example&lt;/h2&gt;

&lt;p&gt;So in my &lt;a href=&quot;/dependency-injection&quot;&gt;last post&lt;/a&gt; I demonstrated an example of dependency injection in action.&lt;/p&gt;

&lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SomeMethod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/path/to/json-file.json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetDirectoryName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Program&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Assembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileDataStore&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;JsonDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repository&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;EntryRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entries&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetEntries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// some more logic here..&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Looks good so far but what if the complexity increases where dependencies of a class may have their own dependencies and those dependencies could even have their own.&lt;/p&gt;

&lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SomeMethod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/path/to/json-file.json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetDirectoryName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Program&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Assembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LoggerDependency&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LoggerDependencyDependency&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()),&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SecondLoggerDependency&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileDataStore&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;JsonDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repository&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;EntryRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entries&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetEntries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// some more logic here..&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;As silly as this looks, it‚Äôs a very possible problem and we‚Äôre having to rely on the caller code to instantiate the classes which again leads to tight coupling.
And so to solve this problem we can use an IoC Container.&lt;/p&gt;

&lt;h3 id=&quot;ioc-container&quot;&gt;IoC Container&lt;/h3&gt;
&lt;p&gt;IoC Container, also known as DI Container, is a framework for implementing &lt;strong&gt;automatic&lt;/strong&gt; dependency injection. It managed object creation and it‚Äôs life-time, and also injects dependencies to the class.&lt;/p&gt;

&lt;p&gt;And so we can use this to automatically instantiating and inject the dependencies whenever it is needed.&lt;/p&gt;

&lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// startup.cs&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Startup&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ....&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ConfigureContainer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ContainerBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;RegisterModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;AutofacModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AutofacModule&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ContainerBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RegisterType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EntryRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;As&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IEntryRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RegisterType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;As&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ILogger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RegisterType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LoggerDependency&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;As&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ILoggerDependency&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RegisterType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LoggerDependencyDependency&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;As&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ILoggerDependencyDependency&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RegisterType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JsonDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;As&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;At it‚Äôs core all we‚Äôre needing to do is register the concrete classes and also which abstraction/interface it implements, autofac will automatically resolve the object creation if it sees the abstraction/interface being injected into a class via the constructor including the objects own dependencies. Autofac will then automatically dispose the objects it has resolved once they‚Äôre no longer needed.&lt;/p&gt;

&lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SomeClass&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IEntryRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_entryRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SomeClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IEntryRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entryRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;_entryRepository&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entryRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SomeMethod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entries&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_entryRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetEntries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// some more logic here..&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;what-other-benefits-does-this-provide&quot;&gt;What other benefits does this provide?&lt;/h3&gt;

&lt;p&gt;While using dependency injection with Autofac makes it easier to test and keep code maintainable. One other benefit is the ability to seemlessly swap out concreate dependencies so long as it implements the abstraction/interface. For example, if I wanted to use a different DataStore or Logger, I can design the new one making sure I implement the same interface and only replace that concrete type in the Autofac module, and so the new concreation will be applied without having to update any logic or code in other areas of the application.&lt;/p&gt;

&lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AutofacModule&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ContainerBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RegisterType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SomeNewEntryRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;As&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IEntryRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RegisterType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SomeNewLogger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;As&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ILogger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RegisterType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SomeNewLoggerDependency&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;As&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ILoggerDependency&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RegisterType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SomeNewLoggerDependencyDependency&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;As&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ILoggerDependencyDependency&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RegisterType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SomeNewDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;As&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;dynamically-register-modules&quot;&gt;Dynamically Register Modules&lt;/h2&gt;

&lt;p&gt;As your project grows, having to maintain the autofac module can get a little tedious. One feature autofac provides is the ability to register by assembly&lt;/p&gt;

&lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AutofacModule&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ContainerBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;RegisterAssemblyTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Assembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetExecutingAssembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AsImplementedInterfaces&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;InstancePerLifetimeScope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;By doing this we can also remove the need to independently register our modules and to do it dynamically thus allowing developers to focus on building the application and being able injecting new dependencies without having to maintain the configuration.&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;A fairly simple and brief example of how autofac works. There are many other features Autofac provides that I haven‚Äôt covered, and I hope to learn more about them as I dive deeper in the framework.&lt;/p&gt;

&lt;h3 id=&quot;external-sources-&quot;&gt;External sources üí°&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://autofac.org/&quot;&gt;Autofac&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/inversion-of-control&quot;&gt;Inversion of Control&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/dependency-injection&quot;&gt;Dependency Injection&lt;/a&gt;&lt;/p&gt;</content><author><name>James Lieu</name></author><category term="Programming" /><summary type="html">IoC Container example with Autofac</summary></entry><entry><title type="html">Dependency Injection</title><link href="http://jameslieu.co.uk/dependency-injection/" rel="alternate" type="text/html" title="Dependency Injection" /><published>2021-02-15T00:00:00+00:00</published><updated>2021-02-15T00:00:00+00:00</updated><id>http://jameslieu.co.uk/dependency-injection</id><content type="html" xml:base="http://jameslieu.co.uk/dependency-injection/">&lt;p&gt;I‚Äôve recently released a post about Inversion of Control and dependency injection in a previous post &lt;a href=&quot;/inversion-of-control&quot;&gt;here&lt;/a&gt;. Now I wanted to provide an example of how the design patten is used and why it‚Äôs useful.&lt;/p&gt;

&lt;h2 id=&quot;introduction-&quot;&gt;Introduction ü§ù&lt;/h2&gt;

&lt;p&gt;Imagine I have an application which stores entries to a blog. To get the data for the entries, I use an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EntryRepository&lt;/code&gt; which will be responsible for querying the data, the application is a simple CRUD API but for now I‚Äôll only focus on reading the data:&lt;/p&gt;
&lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;EntryRepository&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ListEntries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Some logic here&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Within the EntryRepository, imagine that, at the moment, it needs to get the data from a class called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FileDataStore&lt;/code&gt;, which extracts data from a CSV file&lt;/p&gt;

&lt;p&gt;One way I can approach this is to instantiate the class like this:&lt;/p&gt;

&lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ListEntries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/path/to/file.csv&quot;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetDirectoryName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Program&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Assembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileDataStore&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;FileDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetAllEntries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This would work, but the problem is that it causes &lt;strong&gt;tight coupling&lt;/strong&gt; between those classes. And the reason why it matters is, not only is it difficult to test, it is also difficult to mainain.&lt;/p&gt;

&lt;p&gt;For example, imagine that the entry repository also needs to be able to get entries from other data stores, perhaps from a class called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MySQLDataStore&lt;/code&gt;. How would we achieve this? One option is to pass in a parameter to determine which data store to use:&lt;/p&gt;

&lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ListEntries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;useMySQL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;useMySQL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataStore&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MySQLDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetAllEntries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/path/to/file.csv&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetDirectoryName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Program&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Assembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileDataStore&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;FileDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetAllEntries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;At first glance that‚Äôs not ‚Äútoo‚Äù bad, but what happens if there is also a third or even fourth data store added at a later date.&lt;/p&gt;

&lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ListEntries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataStoreEnum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataStoreEnum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MySQL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataStore&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MySQLDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetAllEntries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataStoreEnum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/path/to/csv-file.csv&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetDirectoryName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Program&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Assembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileDataStore&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;FileDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetAllEntries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataStoreEnum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SqlServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataStore&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SqlServerDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetAllEntries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataStoreEnum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Excel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/path/to/excel-file.xls&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetDirectoryName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Program&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Assembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileDataStore&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ExcelDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetAllEntries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataStoreEnum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/path/to/json-file.json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetDirectoryName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Program&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Assembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileDataStore&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;JsonDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetAllEntries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As you can see, it‚Äôs starting to grow and become harder to maintain. The logic deciding which data store to use also had to be updated.Even worse, what happens if we need to reuse this same group of potential datastores in other areas of the project.&lt;/p&gt;

&lt;p&gt;Also, it‚Äôs not impossible for even more data stores to be added or even different csv files which the FileDataStore can use but would need the path to the file.&lt;/p&gt;

&lt;p&gt;As features or additional complexity are added, the code itself may need to drastically change in order to meet those requirements, even as far as potentially needing new parameters. Bearing in mind that everywhere this EntryRepository is being used will also need to be updated or monitored in case of errors and bugs.&lt;/p&gt;

&lt;p&gt;While this example is a little silly and somewhat uncommon in many projects, we can imagine that, in a production environment, if we‚Äôre not careful, the code of said project can become a nightmare to maintain.&lt;/p&gt;

&lt;p&gt;And so the issue of tight coupling is not trivial, even for small projects, if it‚Äôs a project with a long development cycle.&lt;/p&gt;

&lt;h2 id=&quot;dependency-injection-&quot;&gt;Dependency Injection üíâ&lt;/h2&gt;

&lt;p&gt;One solution to this problem is to apply the inversion of control principle and to remove the responsibility of creating the dependencies out of the EntryRepository. We can do this by combining the Dependency Inversion principle with the Dependency Injection design pattern.&lt;/p&gt;

&lt;p&gt;To apply dependency injection pattern, we &lt;strong&gt;inject&lt;/strong&gt; the dependency directly into the EntryRepository via it‚Äôs constructor. What we also need to do is consider the dependency inversion principle which states that:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;High-level modules should not depend on low-level modules. Both should depend on the abstraction.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IEntryRepository&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ListAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;EntryRepository&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IEntryRepository&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IDataStore&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_dataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;EntryRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IDataStore&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;_dataStore&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ListAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_dataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetAllEntries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToListAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;By injecting the dependency into its constructor and having that being represented as an abstraction/interface in the code, this allows the ‚Äúdependency‚Äù itself, be any form it wants to, so long as it implements that interface (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IDataStore&lt;/code&gt;):&lt;/p&gt;

&lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IDataStore&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetAllEntries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MySQLDataStore&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IDataStore&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetAllEntries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// code here&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SqlServerDataStore&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IDataStore&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetAllEntries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// code here&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FileDataStore&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IDataStore&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;EntryRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;_path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetAllEntries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// code here&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;By doing this, whenever we‚Äôre using the EntryRepository, it is up to the calling code to provide the dependency.&lt;/p&gt;

&lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SomeMethod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/path/to/json-file.json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetDirectoryName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Program&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Assembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileDataStore&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;JsonDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repository&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;EntryRepository&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileDataStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// some more logic here..&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Not only is this easier to test, this is a lot easier to maintain. Imagine that the project wanted to no longer read from files and new development made to read from a new data store class.&lt;/p&gt;

&lt;p&gt;So long as the new data store class implements the IDataStore interface, you would easily be able to swap and replace the dependency with the new one without rewriting the EntryRepository code at all including it‚Äôs automated tests if any.&lt;/p&gt;

&lt;h2 id=&quot;summary-&quot;&gt;Summary üìù&lt;/h2&gt;

&lt;p&gt;Dependency Injection is a very useful pattern to write clean code. While it is not always necessary it will make the maintainability and testibility of your applications easier and less brittle.&lt;/p&gt;

&lt;p&gt;One issue this can create is the caller code having the burden of instantiating many dependencies which could include dependencies which have their own dependencies. This leads to the next piece of the puzzle which I‚Äôll write about soon, using an IoC Container framework to automatically deal with that problem.&lt;/p&gt;</content><author><name>James Lieu</name></author><category term="Programming" /><summary type="html">An introduction to Dependency Injection</summary></entry></feed>